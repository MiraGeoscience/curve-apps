[build-system]
build-backend = 'poetry.core.masonry.api'
requires = ['poetry-core>=1.0.0', 'setuptools']

[tool]
[tool.conda-lock]
channels = ['conda-forge']
platforms = ['win-64', 'linux-64']

[tool.conda-lock.dependencies]
h5py = '>=3.2.1, <4.0.0'
pillow = '>=10.3.0, <10.4.0'

[tool.coverage]
[tool.coverage.html]
skip_covered = true
skip_empty = true

[tool.coverage.report]
exclude_lines = ['raise NotImplementedError', 'pass', 'if TYPE_CHECKING', 'pragma: no cover']
fail_under = 80

[tool.coverage.run]
branch = true
source = ['curve_apps']

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
plugins = ['numpy.typing.mypy_plugin', 'pydantic.mypy']
scripts_are_modules = true
show_column_numbers = true
show_error_context = true
warn_unused_configs = true

[tool.poetry]
authors = ['Mira Geoscience <support@mirageoscience.com>']
classifiers = ['Development Status :: 3 - Alpha', 'Intended Audience :: Science/Research', 'Programming Language :: Python', 'Topic :: Scientific/Engineering', 'Topic :: Scientific/Engineering :: Mathematics', 'Topic :: Scientific/Engineering :: Physics', 'Operating System :: Microsoft :: Windows', 'Operating System :: POSIX', 'Operating System :: Unix', 'Operating System :: MacOS', 'Natural Language :: English']
description = 'Find edges on 2D grids or vertices.'
documentation = 'https://mirageoscience-curve-apps.readthedocs-hosted.com/'
homepage = 'https://www.mirageoscience.com/mining-industry-software/python-integration/'
license = 'MIT'
maintainers = ['Dominique Fournier <dominiquef@mirageoscience.com>']
name = 'curve-apps'
readme = 'README.rst'
repository = 'https://github.com/MiraGeoscience/curve-apps'
version = '0.2.0-alpha.1'

[tool.poetry.dependencies]
numpy = '~1.26.0'
pydantic = '^2.5.2'
python = '^3.10, <3.11'
scikit-image = '~0.20.0'
scipy = '~1.14.0'
tqdm = '~4.66.1'

[tool.poetry.dependencies.geoapps-utils]
allow-prereleases = true
version = '>=0.4.0a0.dev0, <0.5.0'

[tool.poetry.dependencies.geoh5py]
allow-prereleases = true
version = '>=0.10.0a0.dev0, <0.11.0'

[tool.poetry.group]
[tool.poetry.group.dev]
[tool.poetry.group.dev.dependencies]
pygments = '*'
pylint = '*'
pytest = '*'
pytest-cov = '*'
sphinx = '*'
sphinx-autodoc-typehints = '*'
sphinx-rtd-theme = '*'
tomli = '*'

[[tool.poetry.include]]
format = ['sdist', 'wheel']
path = 'COPYING'

[[tool.poetry.include]]
format = ['sdist', 'wheel']
path = 'COPYING.LESSER'

[[tool.poetry.include]]
format = ['sdist', 'wheel']
path = 'LICENSE'

[[tool.poetry.include]]
format = ['sdist', 'wheel']
path = 'README.rst'

[[tool.poetry.include]]
format = ['sdist', 'wheel']
path = 'THIRD_PARTY_SOFTWARE.rst'

[[tool.poetry.include]]
format = ['sdist', 'wheel']
path = 'docs/**/THIRD_PARTY_SOFTWARE.rst'

[[tool.poetry.packages]]
include = 'curve_apps'

[[tool.poetry.packages]]
include = 'curve_apps-assets'

[[tool.poetry.source]]
name = 'jfrog-server'
url = 'https://mirageoscienceltd.jfrog.io/artifactory/api/pypi/public-pypi-dev/simple'

[tool.ruff]
target-version = 'py310'

[tool.ruff.lint]
ignore = ['RUF005']
select = ['A', 'B', 'B006', 'B9', 'BLE', 'C4', 'C9', 'E', 'F', 'I', 'RUF', 'TID', 'UP', 'W']

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.ruff.lint.mccabe]
max-complexity = 18
